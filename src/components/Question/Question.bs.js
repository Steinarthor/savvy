// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Cn from "re-classnames/src/Cn.bs.js";
import * as List from "bs-platform/lib/es6/list.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Option from "bs-platform/lib/es6/belt_Option.js";
import * as QuestionStyles$Savvy from "./QuestionStyles.bs.js";

function Question(Props) {
  var currentQuestion = Props.currentQuestion;
  var setSelectedQuestion = Props.setSelectedQuestion;
  var selectedQuestion = Props.selectedQuestion;
  var answer = Props.answer;
  return React.createElement("div", {
              className: QuestionStyles$Savvy.questions
            }, Belt_Option.mapWithDefault(currentQuestion, null, (function (currentQuestion) {
                    return React.createElement("h1", {
                                className: QuestionStyles$Savvy.questionText,
                                dangerouslySetInnerHTML: {
                                  __html: currentQuestion[/* question */3]
                                }
                              });
                  })), Belt_Option.mapWithDefault(currentQuestion, null, (function (currentQuestion) {
                    var answers_000 = currentQuestion[/* correctAnswer */4];
                    var answers_001 = currentQuestion[/* incorretAnswers */5];
                    var answers = /* :: */[
                      answers_000,
                      answers_001
                    ];
                    return $$Array.of_list(List.map((function (question) {
                                      return React.createElement("p", {
                                                  key: question,
                                                  className: Cn.make(/* :: */[
                                                        QuestionStyles$Savvy.question,
                                                        /* :: */[
                                                          Cn.ifTrue(QuestionStyles$Savvy.selectedQuestion, Belt_Option.getWithDefault(selectedQuestion, "") === question),
                                                          /* :: */[
                                                            Cn.ifTrue(QuestionStyles$Savvy.correctQuestion, answer === question),
                                                            /* [] */0
                                                          ]
                                                        ]
                                                      ]),
                                                  onClick: (function (param) {
                                                      return Curry._1(setSelectedQuestion, question);
                                                    }),
                                                  dangerouslySetInnerHTML: {
                                                    __html: question
                                                  }
                                                });
                                    }), answers));
                  })));
}

var make = Question;

export {
  make ,
  
}
/* react Not a pure module */
